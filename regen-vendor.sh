#
# Copyright (C) 2019 The LineageOS Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e

# Load extract_utils and do some sanity checks
MY_DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$MY_DIR" ]]; then MY_DIR="$PWD"; fi

LINEAGE_ROOT="$MY_DIR"/../../..

HELPER="$LINEAGE_ROOT"/vendor/lineage/build/tools/extract_utils.sh
if [ ! -f "$HELPER" ]; then
    echo "Unable to find helper script at $HELPER"
    exit 1
fi
. "$HELPER"

VENDOR_SKIP_FILES_COMMON=(
    # Toybox
    "bin/acpi"
    "bin/base64"
    "bin/basename"
    "bin/bc"
    "bin/blockdev"
    "bin/cal"
    "bin/cat"
    "bin/chcon"
    "bin/chgrp"
    "bin/chmod"
    "bin/chown"
    "bin/chroot"
    "bin/chrt"
    "bin/cksum"
    "bin/clear"
    "bin/cmp"
    "bin/comm"
    "bin/cp"
    "bin/cpio"
    "bin/cut"
    "bin/date"
    "bin/dd"
    "bin/df"
    "bin/diff"
    "bin/dirname"
    "bin/devmem"
    "bin/dmesg"
    "bin/dos2unix"
    "bin/du"
    "bin/echo"
    "bin/egrep"
    "bin/env"
    "bin/expand"
    "bin/expr"
    "bin/fallocate"
    "bin/false"
    "bin/fgrep"
    "bin/file"
    "bin/find"
    "bin/flock"
    "bin/fmt"
    "bin/free"
    "bin/fsync"
    "bin/getconf"
    "bin/getenforce"
    "bin/getevent"
    "bin/getprop"
    "bin/groups"
    "bin/gunzip"
    "bin/gzip"
    "bin/head"
    "bin/hostname"
    "bin/hwclock"
    "bin/i2cdetect"
    "bin/i2cdump"
    "bin/i2cget"
    "bin/i2cset"
    "bin/iconv"
    "bin/id"
    "bin/ifconfig"
    "bin/inotifyd"
    "bin/insmod"
    "bin/install"
    "bin/ionice"
    "bin/iorenice"
    "bin/kill"
    "bin/killall"
    "bin/ln"
    "bin/load_policy"
    "bin/log"
    "bin/logname"
    "bin/losetup"
    "bin/ls"
    "bin/lsmod"
    "bin/lsof"
    "bin/lspci"
    "bin/lsusb"
    "bin/md5sum"
    "bin/microcom"
    "bin/mkdir"
    "bin/mkfifo"
    "bin/mknod"
    "bin/mkswap"
    "bin/mktemp"
    "bin/modinfo"
    "bin/modprobe"
    "bin/more"
    "bin/mount"
    "bin/mountpoint"
    "bin/mv"
    "bin/nc"
    "bin/netcat"
    "bin/netstat"
    "bin/newfs_msdos"
    "bin/nice"
    "bin/nl"
    "bin/nohup"
    "bin/nproc"
    "bin/nsenter"
    "bin/od"
    "bin/paste"
    "bin/patch"
    "bin/pgrep"
    "bin/pidof"
    "bin/pkill"
    "bin/pmap"
    "bin/printenv"
    "bin/printf"
    "bin/ps"
    "bin/pwd"
    "bin/readlink"
    "bin/realpath"
    "bin/renice"
    "bin/restorecon"
    "bin/rm"
    "bin/rmdir"
    "bin/rmmod"
    "bin/runcon"
    "bin/sed"
    "bin/sendevent"
    "bin/seq"
    "bin/setenforce"
    "bin/setprop"
    "bin/setsid"
    "bin/sha1sum"
    "bin/sha224sum"
    "bin/sha256sum"
    "bin/sha384sum"
    "bin/sha512sum"
    "bin/sleep"
    "bin/sort"
    "bin/split"
    "bin/start"
    "bin/stat"
    "bin/stop"
    "bin/strings"
    "bin/stty"
    "bin/swapoff"
    "bin/swapon"
    "bin/sync"
    "bin/sysctl"
    "bin/tac"
    "bin/tail"
    "bin/tar"
    "bin/taskset"
    "bin/tee"
    "bin/time"
    "bin/timeout"
    "bin/top"
    "bin/touch"
    "bin/tr"
    "bin/true"
    "bin/truncate"
    "bin/tty"
    "bin/ulimit"
    "bin/umount"
    "bin/uname"
    "bin/uniq"
    "bin/unix2dos"
    "bin/unlink"
    "bin/unshare"
    "bin/uptime"
    "bin/usleep"
    "bin/uudecode"
    "bin/uuencode"
    "bin/uuidgen"
    "bin/vmstat"
    "bin/watch"
    "bin/wc"
    "bin/which"
    "bin/whoami"
    "bin/xargs"
    "bin/xxd"
    "bin/yes"
    "bin/zcat"

    # Tools
    "bin/awk"
    "bin/checkpoint_gc"
    "bin/cplay"
    "bin/dumpsys"
    "bin/logwrapper"
    "bin/wpa_cli"
    "bin/sh"
    "etc/mkshrc"

    # config.fs
    "etc/fs_config_dirs"
    "etc/fs_config_files"
    "etc/group"
    "etc/passwd"

    # Overlays
    "overlay/FrameworksResCommon.apk"
    "overlay/FrameworksResTarget.apk"
    "overlay/TelephonyResCommon.apk"

    # Service manager
    "bin/vndservice"
    "bin/vndservicemanager"
    "etc/init/vndservicemanager.rc"

    # Sepolicy
    "etc/selinux/vendor_file_contexts"
    "etc/selinux/nonplat_file_contexts"
    "etc/selinux/nonplat_hwservice_contexts"
    "etc/selinux/nonplat_mac_permissions.xml"
    "etc/selinux/nonplat_property_contexts"
    "etc/selinux/nonplat_seapp_contexts"
    "etc/selinux/nonplat_sepolicy.cil"
    "etc/selinux/nonplat_service_contexts"
    "etc/selinux/plat_sepolicy_vers.txt"
    "etc/selinux/precompiled_sepolicy"
    "etc/selinux/precompiled_sepolicy.plat_and_mapping.sha256"
    "etc/selinux/vndservice_contexts"
    "etc/selinux/plat_pub_versioned.cil"
    "etc/selinux/vendor_hwservice_contexts"
    "etc/selinux/vendor_mac_permissions.xml"
    "etc/selinux/vendor_property_contexts"
    "etc/selinux/vendor_seapp_contexts"
    "etc/selinux/vendor_sepolicy.cil"

    # Symlinks
    "app/QDMA/lib/arm64/libvndfwk_detect_jni.qti.so"
    "app/QDMA-UI/lib/arm64/libvndfwk_detect_jni.qti.so"
    "asusfw"
    "odm"
    "factory"
    "firmware/wlan/qca_cld/COUNTRY"
    "firmware/wlan/qca_cld/wlan_mac.bin"
    "rfs/apq/gnss/hlos"
    "rfs/apq/gnss/ramdumps"
    "rfs/apq/gnss/readonly/firmware"
    "rfs/apq/gnss/readonly/vendor/firmware"
    "rfs/apq/gnss/readwrite"
    "rfs/apq/gnss/shared"
    "rfs/mdm/adsp/hlos"
    "rfs/mdm/adsp/ramdumps"
    "rfs/mdm/adsp/readonly/firmware"
    "rfs/mdm/adsp/readonly/vendor/firmware"
    "rfs/mdm/adsp/readwrite"
    "rfs/mdm/adsp/shared"
    "rfs/mdm/cdsp/hlos"
    "rfs/mdm/cdsp/ramdumps"
    "rfs/mdm/cdsp/readonly/firmware"
    "rfs/mdm/cdsp/readwrite"
    "rfs/mdm/cdsp/shared"
    "rfs/mdm/mpss/hlos"
    "rfs/mdm/mpss/ramdumps"
    "rfs/mdm/mpss/readonly/firmware"
    "rfs/mdm/mpss/readonly/vendor/firmware"
    "rfs/mdm/mpss/readwrite"
    "rfs/mdm/mpss/shared"
    "rfs/mdm/slpi/hlos"
    "rfs/mdm/slpi/ramdumps"
    "rfs/mdm/slpi/readonly/firmware"
    "rfs/mdm/slpi/readwrite"
    "rfs/mdm/slpi/shared"
    "rfs/mdm/tn/hlos"
    "rfs/mdm/tn/ramdumps"
    "rfs/mdm/tn/readonly/firmware"
    "rfs/mdm/tn/readwrite"
    "rfs/mdm/tn/shared"
    "rfs/msm/adsp/hlos"
    "rfs/msm/adsp/ramdumps"
    "rfs/msm/adsp/readonly/firmware"
    "rfs/msm/adsp/readonly/vendor/firmware"
    "rfs/msm/adsp/readwrite"
    "rfs/msm/adsp/shared"
    "rfs/msm/cdsp/hlos"
    "rfs/msm/cdsp/ramdumps"
    "rfs/msm/cdsp/readonly/firmware"
    "rfs/msm/cdsp/readonly/vendor/firmware"
    "rfs/msm/cdsp/readwrite"
    "rfs/msm/cdsp/shared"
    "rfs/msm/mpss/hlos"
    "rfs/msm/mpss/ramdumps"
    "rfs/msm/mpss/readonly/firmware"
    "rfs/msm/mpss/readonly/vendor/firmware"
    "rfs/msm/mpss/readwrite"
    "rfs/msm/mpss/shared"
    "rfs/msm/slpi/hlos"
    "rfs/msm/slpi/ramdumps"
    "rfs/msm/slpi/readonly/firmware"
    "rfs/msm/slpi/readonly/vendor/firmware"
    "rfs/msm/slpi/readwrite"
    "rfs/msm/slpi/shared"
    "lib/libEGL_adreno.so"
    "lib/libGLESv2_adreno.so"
    "lib/libq3dtools_adreno.so"
    "lib64/libEGL_adreno.so"
    "lib64/libGLESv2_adreno.so"
    "lib64/libq3dtools_adreno.so"

    # Misc daemons
    "bin/sar_setting"
    "bin/antennaswap"
    "bin/ecUeventd"
    "bin/asus_osinfo"

    # Rootdir
    "etc/fstab.qcom"

    # Wifi
    "bin/hostapd_cli"
    "bin/hw/android.hardware.wifi@1.0-service"
    "bin/hw/hostapd"
    "bin/hw/wpa_supplicant"
    "etc/init/android.hardware.wifi@1.0-service.rc"
    "etc/init/hostapd.android.rc"
    "lib/libwifi-hal-ctrl.so"
    "lib/libwifi-hal-qcom.so"
    "lib/libwpa_client.so"
    "lib64/libwifi-hal-ctrl.so"
    "lib64/libwifi-hal-qcom.so"
    "lib64/libwpa_client.so"
    "lib64/vendor.qti.hardware.wifi.hostapd@1.0.so"
    "lib64/vendor.qti.hardware.wifi.hostapd@1.1.so"
    "lib64/vendor.qti.hardware.wifi.supplicant@2.0.so"
    "lib64/vendor.qti.hardware.wifi.supplicant@2.1.so"

    # Bootctrl
    "lib/hw/bootctrl.kona.so"
    "lib64/hw/bootctrl.kona.so"

    # Power
    "bin/hw/android.hardware.power@1.2-service"
    "etc/init/android.hardware.power@1.2-service.rc"
)

ALL_SKIP_FILES=("${VENDOR_SKIP_FILES_COMMON[@]}" "${VENDOR_SKIP_FILES_DEVICE[@]}")

if [ -z "$1" ]; then
    echo "No input image supplied"
    exit 1
fi

if [ -z "$2" ]; then
    echo "No output filename supplied"
    exit 1
fi

generate_prop_list_from_image "$1" "$2" ALL_SKIP_FILES
